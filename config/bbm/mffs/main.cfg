# Configuration file

capacitor {
    # Upkeep cost for running the capacitor. [range: 0 ~ Integer.MAX, default: 0]
    I:fortron_cost=0
}


forcefield_projector {
    # How many blocks can be generated per tick. Decreasing this can improve TPS, at the cost of response time of fields [range: 0 ~ Integer.MAX, default: 1000]
    I:blocks_per_tick=1000
}


fortron_generator {
    # UE energy stored in the machine, make sure to scale with power usage (power = normal_power * speed(64) * bonus(4) [range: 0 ~ Integer.MAX, default: 12000]
    I:energy_buffer=12000

    # UE energy consumed per cycle (20 cycles per second, speed modules increase cycles and thus power cost) [range: 0 ~ Integer.MAX, default: 20]
    I:energy_cost=20

    # Bonus fortron created when using fuel (output = bonus * normal_output * speed_modules) [range: 0 ~ Integer.MAX, default: 4]
    I:fuel_bonus=4

    # Fortron created per operation (20 operations a second) [range: 0 ~ Integer.MAX, default: 40]
    I:output=40

    # Buckets of fortron that can be stored, scales with capacity cards [range: 0 ~ Integer.MAX, default: 30]
    I:tank_size=30

    # Percentage of power to input or output per transfer [range: 0.0 ~ 1.0, default: 0.05]
    S:transfer_percentage=0.05

    # Enable to require energy to generate fortron [default: true]
    B:use_power=true
}


interdiction_matrix {
    # Fortron cost for attacking entities. [range: 0 ~ Integer.MAX, default: 10000]
    I:attack_cost=10000

    # Set to true for interdiction matrix to collect items from killed players without collection module. [default: false]
    B:collect_items=false

    # Upkeep cost for the running of the Interdiction Matrix [range: 0 ~ Integer.MAX, default: 30]
    I:fortron_amount=30

    # The maximum range for the interdiction matrix. [range: 0 ~ Integer.MAX, default: 1000]
    I:range=1000
}


